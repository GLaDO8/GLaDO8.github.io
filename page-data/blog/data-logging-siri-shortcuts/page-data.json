{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/blog/data-logging-siri-shortcuts","result":{"data":{"post":{"__typename":"MdxPost","slug":"/blog/data-logging-siri-shortcuts","title":"Data logging with Siri Shortcuts","date":"17.04.2020","tags":[{"name":"programming","slug":"programming"},{"name":"iOS","slug":"i-os"},{"name":"Siri Shortcuts","slug":"siri-shortcuts"}],"description":"A comprehensive guide to logging and analysing any kind of data using Siri Shortcuts and Data Jar.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Data logging with Siri Shortcuts\",\n  \"description\": \"A comprehensive guide to logging and analysing any kind of data using Siri Shortcuts and Data Jar.\",\n  \"date\": \"2020-04-17T00:00:00.000Z\",\n  \"slug\": \"/blog/data-logging-siri-shortcuts\",\n  \"tags\": [\"programming\", \"iOS\", \"Siri Shortcuts\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Siri shortcuts is an amazing tool to quickly perform custom tasks from the iOS sharesheet, homescreen or widget drawer. Though it's quite confusing for newcomers and people not familiar with programming, it's very easy to understand the basics and get the hang of it. In this tutorial, we'll look into how you can log complex data with a couple of clicks.\"), mdx(\"p\", null, \"You might have seen those r/DataIsBeautiful posts where people make interesting visualisations of their tinder matches, poop habits, sneeze counts etc. It is quite challenging to maintain such kind of recurring data logs, you need a tool to enter the data as soon as the event happens. Siri Shortcuts work beautifully in such cases. They are quick to access and easy to use, once you've figured out how to create one of course. We'll go through\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Siri shortcuts is an amazing tool to quickly perform custom tasks from the iOS sharesheet, homescreen or widget drawer. Though it's quiteâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/blog/data-logging-siri-shortcuts","formatString":"DD.MM.YYYY"}}}