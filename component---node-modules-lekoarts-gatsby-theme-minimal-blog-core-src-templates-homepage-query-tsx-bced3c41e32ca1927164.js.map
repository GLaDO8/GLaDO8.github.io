{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","a","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","href","target","rel","isMDXComponent","Title","makeShortcode","text","parentName","Homepage","posts","blogPath","p","mt","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","title","date","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-bced3c41e32ca1927164.js","sourcesContent":["import React from \"react\"\nimport { Styled } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n\ttags: {\n\t\tname: string\n\t\tslug: string\n\t}[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n\tconst { tagsPath, basePath } = useMinimalBlogConfig()\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{tags.map((tag, i) => (\n\t\t\t\t<React.Fragment key={tag.slug}>\n\t\t\t\t\t{!!i && `, `}\n\t\t\t\t\t<Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n\t\t\t\t\t\t{tag.name}\n\t\t\t\t\t</Styled.a>\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</React.Fragment>\n\t)\n}\n\nexport default ItemTags","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hello, Netizen.\n    </Text>\n    <Text sx={{\n      fontSize: [2, 3]\n    }} mdxType=\"Text\">\n  I'm Shreyas Gupta - a UX researcher and iOS developer studying at{\" \"}\n  <a href=\"https://www.iiitb.ac.in\" target=\"_blank\" rel=\"noopener\">\n    IIIT Bangalore\n  </a>\n  , India. I like telling stories through visual art, love trying out new food, and\n  occasionaly write about my experiences. You will usually find me lingering on <a href=\"https://twitter.com/awwmaaigawwd/\" target=\"_blank\" rel=\"noopener\">\n    Twitter\n  </a>.\n    </Text>\n    <br />\n    <Text sx={{\n      fontSize: [2, 2, 3],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  The COVID-19 pandemic\n    </Text>\n    <Text sx={{\n      fontSize: [2, 3]\n    }} mdxType=\"Text\">\n  Respect social distancing, wash your hands, be vigilant, and be safe. Global\n  stats{\" \"}\n  <a href=\"https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\" target=\"_blank\" rel=\"noopener\">\n    here\n  </a>\n  , Indian stats <a href=\"https://www.covid19india.org\" target=\"_blank\" rel=\"noopener\">\n    here\n  </a>.\n    </Text>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Contact\" mdxType=\"Title\" />\n    <p><strong parentName=\"p\">{`Address`}</strong><br parentName=\"p\"></br>{`\n`}{`26/C, IIIT Bangalore,`}<br parentName=\"p\"></br>{`\n`}{`Hosur Rd, Electronics City Phase 1,`}<br parentName=\"p\"></br>{`\n`}{`Electronic City, Bengaluru, Karnataka,`}<br parentName=\"p\"></br>{`\n`}{`pin - 560100`}</p>\n    <p><strong parentName=\"p\">{`Mail`}</strong><br parentName=\"p\"></br>{`\n`}{`firstname dot lastname at iiitb dot org`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default function MinimalBlogCoreHomepage({ data }: Props) {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n\tpost: {\n\t\tslug: string\n\t\ttitle: string\n\t\tdate: string\n\t\tentry: string\n\t\tdescription?: string\n\t\ttags?: {\n\t\t\tname: string\n\t\t\tslug: string\n\t\t}[]\n\t}\n\tshowTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n\t<Box mb={5}>\n\t\t<Styled.a as={Link} to={post.slug} sx={{ fontSize: [2, 2, 3], color: `text` }}>\n\t\t\t{post.title}\n\t\t</Styled.a>\n\t\t<p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n\t\t\t<time>{post.date}</time>\n\t\t\t{post.tags && showTags && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{` — `}\n\t\t\t\t\t<ItemTags tags={post.tags} />\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</p>\n\t</Box>\n)\n\nexport default BlogListItem","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}