{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx"],"names":["BlogListItem","post","showTags","mb","a","as","Link","to","slug","sx","fontSize","color","title","mt","date","tags","Fragment","Listing","posts","className","map","key","Blog","useMinimalBlogConfig","tagsPath","basePath","alignItems","justifyContent","flexFlow","h2","variant","replaceSlashes","BlogComponent","allPost","data","nodes","query"],"mappings":"sKAuCeA,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACpB,YAAC,IAAD,CAAKC,GAAI,GACR,YAAC,IAAOC,EAAR,CAAUC,GAAIC,OAAMC,GAAIN,EAAKO,KAAMC,GAAI,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SACnEV,EAAKW,OAEP,iBAAGH,GAAI,CAAEE,MAAO,YAAaE,GAAI,EAAGT,EAAG,CAAEO,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC/E,wBAAOT,EAAKa,MACXb,EAAKc,MAAQb,GACb,YAAC,IAAMc,SAAP,WAEC,YAAC,IAAD,CAAUD,KAAMd,EAAKc,WCHXE,IARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,IAAqBjB,gBAArB,gBACd,uBAASO,GAAI,CAAEN,GAAI,CAAC,EAAG,EAAG,IAAMgB,UAAWA,GACxCD,EAAME,KAAI,SAAAnB,GAAI,OACb,YAAC,EAAD,CAAcoB,IAAKpB,EAAKO,KAAMP,KAAMA,EAAMC,SAAUA,U,kKCkB3CoB,EAjBF,SAAC,GAA0B,IAAxBJ,EAAwB,EAAxBA,MAAwB,EACPK,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKb,MAAM,SACX,YAAC,IAAD,CAAMH,GAAI,CAAEiB,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAOC,GAAR,aACA,YAAC,IAAOzB,EAAR,CAAUC,GAAIC,OAAMG,GAAI,CAAEqB,QAAS,mBAAqBvB,GAAIwB,YAAe,IAAIN,EAAL,IAAiBD,IAA3F,kBAIF,YAAC,IAAD,CAASN,MAAOA,EAAOT,GAAI,CAAEI,GAAI,CAAC,EAAG,QCpC3C,sCAEemB,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,QAER,OAAO,kBAAC,EAAD,CAAMf,MAAOe,EAAQE,SDVfH,IAEFI,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-4c17817443094debbc87.js","sourcesContent":["/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Styled } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n\tpost: {\n\t\tslug: string\n\t\ttitle: string\n\t\tdate: string\n\t\tentry: string\n\t\tdescription?: string\n\t\ttags?: {\n\t\t\tname: string\n\t\t\tslug: string\n\t\t}[]\n\t}\n\tshowTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n\t<Box mb={5}>\n\t\t<Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n\t\t\t{post.title}\n\t\t</Styled.a>\n\t\t<p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n\t\t\t<time>{post.date}</time>\n\t\t\t{post.tags && showTags && (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{` â€” `}\n\t\t\t\t\t<ItemTags tags={post.tags} />\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</p>\n\t</Box>\n)\n\nexport default BlogListItem","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { Flex } from \"@theme-ui/components\"\r\nimport Layout from \"./layout\"\r\nimport Listing from \"./listing\"\r\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    excerpt: string\r\n    description: string\r\n    timeToRead: number\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Blog = ({ posts }: PostsProps) => {\r\n  const { tagsPath, basePath } = useMinimalBlogConfig()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Styled.h2>Blog</Styled.h2>\r\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\r\n          View all tags\r\n        </Styled.a>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import { graphql } from \"gatsby\"\r\nimport BlogComponent from \"../components/blog\"\r\n\r\nexport default BlogComponent\r\n\r\nexport const query = graphql`\r\n  query($formatString: String!) {\r\n    allPost(sort: { fields: date, order: DESC }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: $formatString)\r\n        excerpt\r\n        timeToRead\r\n        description\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Blog from \"../../../components/blog\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Blog posts={allPost.nodes} />\r\n}\r\n"],"sourceRoot":""}